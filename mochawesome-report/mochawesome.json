{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2025-08-01T12:48:56.687Z",
    "end": "2025-08-01T12:49:00.493Z",
    "duration": 3806,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "26e96c91-530d-481a-a805-6e5da097dc8c",
      "title": "",
      "fullFile": "cypress\\e2e\\weatherAPItest.cy.js",
      "file": "cypress\\e2e\\weatherAPItest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7f02e6b7-bd70-4f10-90a7-12d2e87c1b4b",
          "title": "Weather API Automation Tests using POM",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Valid city: Lahore",
              "fullTitle": "Weather API Automation Tests using POM Valid city: Lahore",
              "timedOut": null,
              "duration": 1487,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "weatherAPI.getWeatherByCity('Lahore').then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.name).to.eq('Lahore');\n  expect(response.body.main.temp).to.be.a('number');\n  expect(response.body.weather[0].description).to.be.a('string');\n});",
              "err": {},
              "uuid": "794314c9-54b9-4b52-ab92-f4c39e6e443c",
              "parentUUID": "7f02e6b7-bd70-4f10-90a7-12d2e87c1b4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Invalid city name",
              "fullTitle": "Weather API Automation Tests using POM Invalid city name",
              "timedOut": null,
              "duration": 360,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "weatherAPI.getWeatherByCity('a').then(response => {\n  expect(response.status).to.eq(404);\n  expect(response.body.message).to.include('city not found');\n});",
              "err": {},
              "uuid": "4dfd2128-088e-4302-87c5-93f90dce8c86",
              "parentUUID": "7f02e6b7-bd70-4f10-90a7-12d2e87c1b4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Missing City Query: Should return 400 error",
              "fullTitle": "Weather API Automation Tests using POM Missing City Query: Should return 400 error",
              "timedOut": null,
              "duration": 357,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const url = `${Cypress.config('baseUrl')}/weather?appid=${Cypress.env('apiKey')}&units=metric`;\ncy.request({\n  method: 'GET',\n  url: 'https://api.openweathermap.org/data/2.5/weather',\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(401);\n});",
              "err": {},
              "uuid": "35445c1d-dd0a-4af5-b8b4-f4e707482feb",
              "parentUUID": "7f02e6b7-bd70-4f10-90a7-12d2e87c1b4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Invalid API Key: Should return 401 error",
              "fullTitle": "Weather API Automation Tests using POM Invalid API Key: Should return 401 error",
              "timedOut": null,
              "duration": 355,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const url = `${Cypress.config('baseUrl')}/weather?q=Lahore&appid=INVALIDKEY123&units=metric`;\ncy.request({\n  method: 'GET',\n  url: 'https://api.openweathermap.org/data/2.5/weather',\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(401);\n  expect(response.body.message).to.include('Invalid API key');\n});",
              "err": {},
              "uuid": "f8427666-30c3-4a88-af1e-6e3b91b77dc2",
              "parentUUID": "7f02e6b7-bd70-4f10-90a7-12d2e87c1b4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Temperature Unit is Metric",
              "fullTitle": "Weather API Automation Tests using POM Verify Temperature Unit is Metric",
              "timedOut": null,
              "duration": 359,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "weatherAPI.getWeatherByCity('Faisalabad').then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.main.temp).to.be.a('number');\n});",
              "err": {},
              "uuid": "d524ec0f-9f55-495d-a426-b8e204d9ac19",
              "parentUUID": "7f02e6b7-bd70-4f10-90a7-12d2e87c1b4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check response time under 2 seconds",
              "fullTitle": "Weather API Automation Tests using POM Check response time under 2 seconds",
              "timedOut": null,
              "duration": 355,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "weatherAPI.getWeatherByCity('Lahore').then(response => {\n  expect(response.duration).to.be.lessThan(2000);\n});",
              "err": {},
              "uuid": "de0c8fc6-1fb4-4394-9759-ce4a668b974f",
              "parentUUID": "7f02e6b7-bd70-4f10-90a7-12d2e87c1b4b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate Response Structure",
              "fullTitle": "Weather API Automation Tests using POM Validate Response Structure",
              "timedOut": null,
              "duration": 366,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "weatherAPI.getWeatherByCity('Lahore').then(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.have.all.keys('coord', 'weather', 'base', 'main', 'visibility', 'wind', 'clouds', 'dt', 'sys', 'timezone', 'id', 'name', 'cod');\n});",
              "err": {},
              "uuid": "f0cfe174-6c10-49f9-b0be-dc2841126717",
              "parentUUID": "7f02e6b7-bd70-4f10-90a7-12d2e87c1b4b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "794314c9-54b9-4b52-ab92-f4c39e6e443c",
            "4dfd2128-088e-4302-87c5-93f90dce8c86",
            "35445c1d-dd0a-4af5-b8b4-f4e707482feb",
            "f8427666-30c3-4a88-af1e-6e3b91b77dc2",
            "d524ec0f-9f55-495d-a426-b8e204d9ac19",
            "de0c8fc6-1fb4-4394-9759-ce4a668b974f",
            "f0cfe174-6c10-49f9-b0be-dc2841126717"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3639,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": "true",
        "overwrite": "false",
        "html": "true",
        "json": "true",
        "repDir": "cypress/reports"
      },
      "version": "6.2.0"
    }
  }
}